@page "/watermark"
@inherits WatermarkPageModel

<Center BackgroundColor="Transparent">
    <ItemTemplate>
        <Wrapper MaxWidth="1100">
            <ItemTemplate>
                @if (!IsBusy && file != null && fileWatermark != null)
                {
                    <div class="contentWrapper">
                        <ImageContainer SrcImage=@Result.image SrcIconDelete="icon/delete.svg" OnDelete=@DeleteImage
                                        WidthImage="100" HeightImage="100"
                                        SrcWatermark=@ResultWatermark.image
                                        ObjectFitOptions=ObjectFitOptions.Contain
                                        Position=@PositionWatermark
                                        OpacityWatermark=50
                                        WidthWatermark=20/>
                        <Card1 Title="Watermark"
                               TitleButton="Download"
                               Error=@Error
                               IconCloseSrc="icon/close.svg"
                               BackgroundColorButton="var(--primary-color)"
                               TextColorButton="var(--primary-color-light)"
                               DownloadEventCallBack=@OnDownload
                               CloseEventCallBack=@DeleteImage>
                            <ItemTemplate>
                                <div style="display:flex;width:100%;gap:10px; flex-wrap: wrap;">
                                    <div style="width:100%;">
                                        <Label Text="Position" />
                                        <SelectInput TItem="Position" @bind-Value=PositionWatermark>
                                            <ChildContent>
                                                @foreach (var pos in Enum.GetValues(typeof(Position)).Cast<Position>())
                                                {
                                                    <option value=@pos>@pos</option>
                                                }
                                            </ChildContent>
                                        </SelectInput>
                                    </div>
                                </div>
                            </ItemTemplate>
                        </Card1>
                    </div>
                }
                else
                {
                    <div style="display: flex; justify-content: center; gap: 20px; flex-wrap: wrap;">
                        <div style="width: 100%; max-width: 500px;">
                            <Title Text="Image Principal" />
                            <FileInput TextColor="var(--text-color)" ValueChanged=@HandleImageUpload />
                        </div>
                        <div style="width: 100%;  max-width: 500px;">
                            <Title Text="Watermark" TextColor="red" />
                            <FileInput TextColor="red" ValueChanged=@HandleWatermarkUpload />
                        </div>
                    </div>

                    if (IsBusy)
                    {
                        <div style="display:flex; justify-content:center; align-items:center; flex-direction:column;">
                            <Spiner />
                            <Label Text="Loading ..." />
                        </div>
                    }
                    <p style="color : red">@Error</p>
                }
            </ItemTemplate>
        </Wrapper>
    </ItemTemplate>
</Center>